(function($){'use strict'; $(document).ready(function(){init(); $('.pf-color-picker').wpColorPicker()}); $(document).on("click", '.addedFields', function(event){event.preventDefault(); var hasClass = $(this).hasClass('addedFields'); if (hasClass){$("#tabs").tabs("option", "active", 1); $('.addedFields').css({'background':'#f1f1f1', 'color':'#454545'}); $(this).css({'background-color':'#0085ba !important', 'color':'#fff'}); var pfmetakey = $(this).attr('data-meta-key'); var pffieltype = $(this).attr('data-pf-field-type'); var Fieldargument = JSON.parse($("#" + pfmetakey).attr('data-meta-attributes')); var response = edit_field_detail(pffieltype, Fieldargument); if (response){$('#tabs-2').html(response); $('.fpfullwidth').on('keyup change', function(){var currentId = $(this).attr('data-fieldid'); var type = $(this).attr('id'); if (type === 'pflabel'){labelUpdate(currentId, $(this).val()); Fieldargument.pf_label = $(this).val()} else if (type === 'pfdvalue'){Fieldargument.pf_dvalue = $(this).val(); valueUpdate(currentId, $(this).val())} else if (type === 'pffieldclass'){classUpdate(currentId, $(this).val()); Fieldargument.pf_field_class = $(this).val()} else if (type === 'pfplaceholder'){placeholderUpdate(currentId, $(this).val()); Fieldargument.pf_placeholder = $(this).val()} else if (type === 'pftheight'){styleUpdate(currentId, $(this).val()); Fieldargument.pf_theight = $(this).val()} else if (type === 'pfmin'){minLengthUpdate(currentId, $(this).val()); Fieldargument.pf_min = $(this).val()} else if (type === 'pfmax'){maxLengthUpdate(currentId, $(this).val()); Fieldargument.pf_max = $(this).val()} else if (type === 'pfoptions'){Fieldargument.pf_options = $(this).val(); addOption(currentId, $(this).val(), Fieldargument)} else if (type === 'pfrequired'){if ($('#' + type).is(':checked')){var val = 'yes'} else{var val = 'no'}
var required = $(this).attr('data-fieldre'); requiredUpdate(currentId, val, required); Fieldargument.pf_required = val} else{textUpdate(currentId, $(this).val()); Fieldargument.pf_filed_text = $(this).val()}
var $finalArray = JSON.stringify(Fieldargument); var $dataMeta = htmlspecialchars($finalArray); setAttr(pfmetakey, $finalArray)})}}}); function setAttr(id, attr){var mesg = frontend_ajax_object.information_message; $("#" + id).attr('data-meta-attributes', attr); $('.message').fadeIn(1000); $('.message').html(mesg + "<span style='float:right' class='closess'>×</span>"); $('.message').css({"background-color":"#fcf8e3", "color":"#8a6d3b", "border":"1px solid #faebcc", "margin-bottom":"10px"})}
function textUpdate(id, text){$('#' + id).html(text)}
function labelUpdate(id, text){$('#' + id).text(text)}
function valueUpdate(id, text){$('#' + id).val(text)}
function classUpdate(id, text){$('#' + id).attr('class', text)}
function placeholderUpdate(id, text){$('#' + id).attr('placeholder', text)}
function styleUpdate(id, text){$('#' + id).css('height', text)}
function maxLengthUpdate(id, text){$('#' + id).attr('maxlength', text)}
function minLengthUpdate(id, text){$('#' + id).attr('minlength', text)}
function requiredUpdate(id, text, required){if (text == 'yes'){$('#' + required).show()} else{$('#' + required).hide()}}
function addOption(id, text, options){if (options.pf_field_type === 'pf_select_field'){var optionss = text.split(","); var ele = ''; optionss.forEach(function(element, index){if (typeof element != 'undefined' && element != ''){var elementHtml = '<option value="' + element + '">' + element + '</option>'; ele += elementHtml}}); $("#" + id).html(ele)} else if (options.pf_field_type === 'pf_radio_field'){var optionss = text.split(","); var ele = ''; optionss.forEach(function(element, index){if (typeof element != 'undefined' && element != ''){var elementHtml = '<input disabled = "" style = "width:auto;display:inline-block" name="' + options.pf_title + '[]" value="' + element + '" id="' + element + '" type="radio" >'; elementHtml += '<label style="margin-right: 10px;display:inline-block" for="' + element + '">' + element + '</label>'; ele += elementHtml}}); $("#" + id + '_container').html(ele)} else if (options.pf_field_type === 'pf_checkbox_field'){var optionss = text.split(","); var ele = ''; optionss.forEach(function(element, index){if (typeof element != 'undefined' && element != ''){var elementHtml = '<input disabled = "" style = "width:auto;display:inline-block" name="' + options.pf_title + '[]" value="' + element + '" id="' + element + '" type="checkbox" >'; elementHtml += '<label style="margin-right: 10px;display:inline-block" for="' + element + '">' + element + '</label>'; ele += elementHtml}}); $("#" + id + '_container').html(ele)}}
$(document).on("click", '.pfaddfield', function(event){event.preventDefault(); var datarow = $(this).attr('data-pop-row'); var datacol = $(this).attr('data-pop-col'); var fieldType = $(this).attr('data-field'); var fropcolumnID = $(this).attr('data-col-id'); var datapoppostID = $(this).attr('data-pop-postID'); var response = create_field(fieldType, fropcolumnID, datacol, datarow, datapoppostID); if (response){var mesg = frontend_ajax_object.information_message; var field_success_message = frontend_ajax_object.field_success_message; $("#" + fropcolumnID + " .item_container").append(response); $('.message').fadeIn(1000); $('.message').html(mesg + " <span style='float:right' class='closess'>×</span>"); $('.message').css({"background-color":"#fcf8e3", "color":"#8a6d3b", "border":"1px solid #faebcc", "margin-bottom":"10px"}); alertify.set({delay:1000}); alertify.success(ucfirst(fieldType.split("_")[1]) + " " + field_success_message)}}); $(document).on("click", '.pf_delete_field', function(event){event.preventDefault(); if ($('#' + $(this).attr('data-meta-key')).remove()){var mesg = frontend_ajax_object.information_message; var field_del_message = frontend_ajax_object.field_del_message; $('.message').fadeIn(1000); $('.message').html(mesg + " <span style='float:right' class='closess'>×</span>"); $('.message').css({"background-color":"#fcf8e3", "color":"#8a6d3b", "border":"1px solid #faebcc", "margin-bottom":"10px"}); alertify.set({delay:1000}); alertify.success(field_del_message)}}); $(document).on("click", '.saveForm', function(event){event.preventDefault(); if ($('.switchColumn').hasClass('liactive')){var active_column = $('.liactive').attr('data-column-active')}
var fields = []; $('#power_forms_columns_one .item_container section').each(function(index, value){var eachFieldElementone = JSON.parse(value.dataset.metaAttributes); eachFieldElementone.pf_column_id = 'power_forms_columns_one'; eachFieldElementone.pf_column = 'one'; fields.push(eachFieldElementone)}); $('#power_forms_columns_two .item_container section').each(function(index, value){var eachFieldElementtwo = JSON.parse(value.dataset.metaAttributes); eachFieldElementtwo.pf_column_id = 'power_forms_columns_two'; eachFieldElementtwo.pf_column = 'two'; fields.push(eachFieldElementtwo)}); $('#power_forms_columns_three .item_container section').each(function(index, value){var eachFieldElementthree = JSON.parse(value.dataset.metaAttributes); eachFieldElementthree.pf_column_id = 'power_forms_columns_three'; eachFieldElementthree.pf_column = 'three'; fields.push(eachFieldElementthree)}); var postid = $(this).attr('data-postID'); $('.loadersOut').show(); $.ajax({url:frontend_ajax_object.ajaxurl, type:'POST', data:{action:"save_form_field_detail", postid:postid, active_column:active_column, fields:fields}, success:function(response){var form_save_message = frontend_ajax_object.form_save_message; var res = JSON.parse(response); $('.message').fadeIn(1000); $('.message').html(res.html + " <span style='float:right' class='closess'>×</span>"); $('.message').css({"background-color":"#dff0d8", "color":"#3c763d", "border":"1px solid #d6e9c6", "margin-bottom":"10px"}); $('.message').fadeOut(3000); $('.loadersOut').hide(); alertify.set({delay:1000}); alertify.success(form_save_message)}, error:function(xhr, ajaxOptions, thrownError){$('.loadersOut').hide(); var form_error = frontend_ajax_object.form_error; alertify.set({delay:1000}); alertify.error(form_error)}})}); $('.col-navigation .switchColumn').click(function(){var source = $(this).attr('data-source'); var target = $(this).attr('data-target'); var datacolumnactive = $(this).attr('data-column-active'); var datapostid = $(this).attr('data-postid'); if (source == 'power_forms_columns_one'){$('.switchColumn').removeClass('liactive'); $(this).addClass('liactive'); $('.switchColumn span').removeClass('colum-active'); $('#spanColum1').addClass('colum-active'); $('.mainDiv>div').removeClass(); $('.mainDiv>div:nth-child(1)').addClass(target); $('#power_forms_columns_one').show(); $('#power_forms_columns_two').hide(); $('#power_forms_columns_three').hide(); rearrangecolumn('power_forms_columns_two', 'power_forms_columns_one', 'two', 'one', 'three')} else if (source == 'power_forms_columns_two'){$('.switchColumn').removeClass('liactive'); $(this).addClass('liactive'); $('.switchColumn span').removeClass('colum-active'); $('#spanColum2').addClass('colum-active'); $('.mainDiv>div').removeClass(); $('.mainDiv>div:nth-child(1)').addClass(target); $('.mainDiv>div:nth-child(2)').addClass(target); $('#power_forms_columns_one').show(); $('#power_forms_columns_two').show(); $('#power_forms_columns_three').hide(); rearrangecolumn('power_forms_columns_three', 'power_forms_columns_two', 'three', 'two', '')} else if (source == 'power_forms_columns_three'){$('.switchColumn').removeClass('liactive'); $(this).addClass('liactive'); $('.switchColumn span').removeClass('colum-active'); $('#spanColum3').addClass('colum-active'); $('.mainDiv>div').removeClass(); $('.mainDiv>div:nth-child(1)').addClass(target); $('.mainDiv>div:nth-child(2)').addClass(target); $('.mainDiv>div:nth-child(3)').addClass(target); $('#power_forms_columns_one').show(); $('#power_forms_columns_two').show(); $('#power_forms_columns_three').show(); rearrangecolumn('power_forms_columns_three', 'power_forms_columns_three', 'three', 'three', '')}}); function rearrangecolumn(prevcolumnid, currentcolumnid, prevcolumn, currentcolumn, optional){if (currentcolumn == 'one' && optional){if (optional){$('#power_forms_columns_three .item_container section').each(function(index, value){var eachFieldElementone = JSON.parse(value.dataset.metaAttributes); eachFieldElementone.pf_column_id = 'power_forms_columns_' + optional; eachFieldElementone.pf_column = currentcolumn}); var res = $('#power_forms_columns_three .item_container section').detach(); $('#' + currentcolumnid + ' .item_container').append(res)}
$('#' + prevcolumnid + ' .item_container section').each(function(index, value){var eachFieldElementone = JSON.parse(value.dataset.metaAttributes); eachFieldElementone.pf_column_id = 'power_forms_columns_' + currentcolumn; eachFieldElementone.pf_column = currentcolumn}); var res = $('#' + prevcolumnid + ' .item_container section').detach(); $('#' + currentcolumnid + ' .item_container').append(res)} else{$('#' + prevcolumnid + ' .item_container section').each(function(index, value){var eachFieldElementone = JSON.parse(value.dataset.metaAttributes); eachFieldElementone.pf_column_id = 'power_forms_columns_' + currentcolumn; eachFieldElementone.pf_column = currentcolumn}); var res = $('#' + prevcolumnid + ' .item_container section').detach(); $('#' + currentcolumnid + ' .item_container').append(res)}
var mesg = frontend_ajax_object.information_message; var form_column = frontend_ajax_object.form_column; $('.message').fadeIn(1000); $('.message').html(mesg + "<span style='float:right' class='closess'>×</span>"); $('.message').css({"background-color":"#fcf8e3", "color":"#8a6d3b", "border":"1px solid #faebcc", "margin-bottom":"10px"}); alertify.set({delay:1000}); alertify.success(form_column + " " + currentcolumn)}
$(document).on("click", '.previewForm', function(event){event.preventDefault(); var datapoppostID = $(this).attr('data-postid'); if ($('.switchColumn').hasClass('liactive')){var active_column = $('.liactive').attr('data-column-active')}
var fields = []; $('#power_forms_columns_one .item_container section').each(function(index, value){var eachFieldElementone = JSON.parse(value.dataset.metaAttributes); eachFieldElementone.pf_column_id = 'power_forms_columns_one'; eachFieldElementone.pf_column = 'one'; fields.push(eachFieldElementone)}); $('#power_forms_columns_two .item_container section').each(function(index, value){var eachFieldElementtwo = JSON.parse(value.dataset.metaAttributes); eachFieldElementtwo.pf_column_id = 'power_forms_columns_two'; eachFieldElementtwo.pf_column = 'two'; fields.push(eachFieldElementtwo)}); $('#power_forms_columns_three .item_container section').each(function(index, value){var eachFieldElementthree = JSON.parse(value.dataset.metaAttributes); eachFieldElementthree.pf_column_id = 'power_forms_columns_three'; eachFieldElementthree.pf_column = 'three'; fields.push(eachFieldElementthree)}); $('.loadersOut').show(); $.ajax({url:frontend_ajax_object.ajaxurl, type:'POST', data:{action:"preview_form", datapoppostID:datapoppostID, fields:fields, active_column:active_column}, success:function(response){var htmlResponse = JSON.parse(response); $('.maincontent').html(htmlResponse.html); $('.modal-content .fields-heading').html(htmlResponse.title); $('.modal').show(); $('.loadersOut').hide()}, error:function(xhr, ajaxOptions, thrownError){$('.loadersOut').hide(); var form_error = frontend_ajax_object.form_error; alertify.set({delay:1000}); alertify.error(form_error)}})}); $(document).on("click", '.close', function(event){$('.modal').hide(); $('.maincontent').html(''); $('.fields-heading').text('Fields Manager')}); $(document).on("click", '.closess', function(event){$('.message').fadeOut("slow")}); $(document).ready(function(){$("#sortable,#sortable1,#sortable2").sortable({connectWith:".item_container", revert:!0, update:function(event, ui){var mesg = frontend_ajax_object.information_message; var form_sort_message = frontend_ajax_object.form_sort_message; $('.message').fadeIn(1000); $('.message').html(mesg + " <span style='float:right' class='closess'>×</span>"); $('.message').css({"background-color":"#fcf8e3", "color":"#8a6d3b", "border":"1px solid #faebcc", "margin-bottom":"10px"}); alertify.set({delay:1000}); alertify.success(form_sort_message)}, receive:function(event, ui){if (typeof $(ui.item[0]).attr('data-pop-row') !== 'undefined'){var datarow = $(ui.item[0]).attr('data-pop-row'); var datacol = $(ui.item[0]).attr('data-pop-col'); var fieldType = $(ui.item[0]).attr('data-field'); var fropcolumnID = $(ui.item[0]).attr('data-col-id'); var datapoppostID = $(ui.item[0]).attr('data-pop-postID'); var response = create_field(fieldType, fropcolumnID, datacol, datarow, datapoppostID); if (response){var field_del_message = frontend_ajax_object.field_success_message; alertify.set({delay:1000}); alertify.success(ucfirst(fieldType.split("_")[1]) + " " + field_del_message)} else{var form_error = frontend_ajax_object.form_error; alertify.set({delay:1000}); alertify.error(form_error)}
$(".item_container li").replaceWith(response)}}}).disableSelection().droppable()}); $(document).ready(function(){$(".draggable").draggable({connectToSortable:".item_container", helper:"clone", revert:"invalid", }); $("#tabs").tabs()}); function create_field(pffieltype, $datacolid, $datacol, $datarow, $datapoppostID){var $key = 'pf_' + pffieltype + '_' + uniqid('foo'); var $title = 'pf_' + pffieltype.split("_")[1] + "_" + Math.floor((Math.random() * 1000) + 1); var $attr = {}; $attr.pf_field_type = pffieltype; $attr.pf_column_id = $datacolid; $attr.pf_column = $datacol; $attr.pf_row = $datarow; $attr.pf_post_id = $datapoppostID; $attr.pf_title = $title; $attr.pf_label = ucfirst(pffieltype.split("_")[1]); $attr.pf_dvalue = ''; $attr.pf_help_text = ''; $attr.pf_error_msg = ''; $attr.pf_meta_key = ''; $attr.pf_placeholder = 'please enter ' + ucfirst(pffieltype.split("_")[1]); $attr.pf_min = ''; $attr.pf_max = ''; $attr.pf_theight = ''; $attr.pf_accept_html = 'no'; $attr.pf_options = ''; $attr.pf_file_type = ''; $attr.pf_file_length = ''; $attr.pf_filed_text = ''; $attr.pf_required = 'yes'; $attr.pf_field_class = ''; $attr.pf_field_id = $key; if (pffieltype.split("_")[1] == 'select' || pffieltype.split("_")[1] == 'checkbox' || pffieltype.split("_")[1] == 'radio'){$attr.pf_options = 'one,two'}
if (pffieltype.split("_")[1] == 'h1' || pffieltype.split("_")[1] == 'h2' || pffieltype.split("_")[1] == 'h3' || pffieltype.split("_")[1] == 'h4' || pffieltype.split("_")[1] == 'h5' || pffieltype.split("_")[1] == 'h6' || pffieltype.split("_")[1] == 'p'){$attr.pf_filed_text = 'Text'}
var $finalArray = JSON.stringify($attr); var $dataMeta = htmlspecialchars($finalArray); var $backendfield = ''; $backendfield += '<section class ="' + pffieltype + ' addedFields ui-state-default" id= "' + $key + '" data-meta-attributes="' + $dataMeta + '" data-meta-key = "' + $key + '" pf-data-post-id = "' + $attr.pf_post_id + '" data-pf-column-id = "' + $attr.pf_column_id + '" data-pf-column-number = "' + $attr.pf_column + '" data-pf-field-type="' + $attr.pf_field_type + '">'; $backendfield += '<span style = "float: right;">'; $backendfield += '<span data-meta-key = "' + $key + '" pf-data-post-id = "' + $attr.pf_post_id + '" data-pf-column-id = "' + $attr.pf_column_id + '" data-pf-column-number = "' + $attr.pf_column + '" class = "dashicons dashicons-trash pf_delete_field pfeditdeletefield"></span></span>'; $backendfield += fieldCreation(pffieltype.split("_")[1], $attr); $backendfield += '</section>'; $('#tagsDiv').append('<span style="margin-right:10px">[' + $title + ']</span>'); return $backendfield}
function fieldCreation(fieldtype, attributes){var field; switch (fieldtype){case 'textarea':field = '<div class="power_form_handle pf_form_field_wrap inputadded" data-meta-key = "' + attributes.pf_field_id + '" pf-data-post-id = "' + attributes.pf_post_id + '" data-pf-column-number = "' + attributes.pf_column + '" data-pf-field-type="' + attributes.pf_field_type + '"><label id="' + attributes.pf_field_id + '_' + attributes.pf_field_type.split("_")[1] + '_label" for="' + attributes.pf_field_id + '">' + ucfirst(attributes.pf_field_type.split("_")[1]) + '</label><strong id="' + attributes.pf_field_id + '_' + attributes.pf_field_type.split("_")[1] + '_required">*</strong><textarea id="' + attributes.pf_field_id + '_' + attributes.pf_field_type.split("_")[1] + '" name="' + attributes.pf_title + '" style="height:100px" class="' + ucfirst(attributes.pf_field_type.split("_")[1]) + '" required="" disabled value="" placeholder="Please enter a ' + ucfirst(attributes.pf_field_type.split("_")[1]) + '"></textarea></div>'; return field; break; case 'select':field = '<div class="power_form_handle pf_form_field_wrap inputadded" data-meta-key = "' + attributes.pf_field_id + '" pf-data-post-id = "' + attributes.pf_post_id + '" data-pf-column-number = "' + attributes.pf_column + '" data-pf-field-type="' + attributes.pf_field_type + '">'; field += '<label style="widht:100%" for="' + attributes.pf_field_id + '" id="' + attributes.pf_field_id + '_' + attributes.pf_field_type.split("_")[1] + '_label">' + ucfirst(attributes.pf_field_type.split("_")[1]) + ' </label><strong id="' + attributes.pf_field_id + '_' + attributes.pf_field_type.split("_")[1] + '_required">*</strong>'; field += '<select name="' + attributes.pf_title + '" id="' + attributes.pf_field_id + '_options" disabled>'; field += '<option value="one">one</option>'; field += '<option value="two">two</option>'; field += '</select>'; field += '</div>'; return field; break; case 'checkbox':case 'radio':field = '<div class="power_form_handle pf_form_field_wrap inputadded" data-meta-key = "' + attributes.pf_field_id + '" pf-data-post-id = "' + attributes.pf_post_id + '" data-pf-column-number = "' + attributes.pf_column + '" data-pf-field-type="' + attributes.pf_field_type + '">'; field += '<label style="widht:100%" id="' + attributes.pf_field_id + '_' + attributes.pf_field_type.split("_")[1] + '_label" for="' + attributes.pf_field_id + '">' + ucfirst(attributes.pf_field_type.split("_")[1]) + ' </label><strong id="' + attributes.pf_field_id + '_' + attributes.pf_field_type.split("_")[1] + '_required">*</strong>'; field += '<div id="' + attributes.pf_field_id + '_container"><input disabled style="width:auto;display:inline-block" name="' + attributes.pf_title + '[]" value="one" id="one" type="' + attributes.pf_field_type.split("_")[1] + '"><label style="margin-right: 10px;display:inline-block" for="one">one</label>'; field += '<input disabled style="width:auto;display:inline-block" name="' + attributes.pf_title + '[]" value="two" id="two" type="' + attributes.pf_field_type.split("_")[1] + '"> <label style="margin-right: 10px;display:inline-block" for="two">two</label></div>'; field += '</div>'; return field; break; case 'h1':case 'h2':case 'h3':case 'h4':case 'h5':case 'h6':case 'p':field = '<div class="power_form_handle pf_form_field_wrap inputadded" data-meta-key = "' + attributes.pf_field_id + '" pf-data-post-id = "' + attributes.pf_post_id + '" data-pf-column-number = "' + attributes.pf_column + '" data-pf-field-type="' + attributes.pf_field_type + '">'; field += '<' + attributes.pf_field_type.split("_")[1] + ' id="' + attributes.pf_field_id + '_' + attributes.pf_field_type.split("_")[1] + '" name="' + attributes.pf_title + '" class="">Text</' + attributes.pf_field_type.split("_")[1] + '>'; field += '</div>'; return field; break; case 'html':field = '<div class="power_form_handle pf_form_field_wrap inputadded" data-meta-key = "' + attributes.pf_field_id + '" pf-data-post-id = "' + attributes.pf_post_id + '" data-pf-column-number = "' + attributes.pf_column + '" data-pf-field-type="' + attributes.pf_field_type + '">'; field += '<div id="' + attributes.pf_field_id + '_' + attributes.pf_field_type.split("_")[1] + '">html</div>'; field += '</div>'; return field; break; case 'br':case 'hr':field = '<div class="power_form_handle pf_form_field_wrap inputadded" data-meta-key = "' + attributes.pf_field_id + '" pf-data-post-id = "' + attributes.pf_post_id + '" data-pf-column-number = "' + attributes.pf_column + '" data-pf-field-type="' + attributes.pf_field_type + '">'; field += '<' + attributes.pf_field_type.split("_")[1] + '/>'; field += '</div>'; return field; break; default:field = '<div class="power_form_handle pf_form_field_wrap inputadded" data-meta-key = "' + attributes.pf_field_id + '" pf-data-post-id = "' + attributes.pf_post_id + '" data-pf-column-number = "' + attributes.pf_column + '" data-pf-field-type="' + attributes.pf_field_type + '">'; field += '<label id="' + attributes.pf_field_id + '_' + attributes.pf_field_type.split("_")[1] + '_label" for="' + attributes.pf_field_id + '">' + ucfirst(attributes.pf_field_type.split("_")[1]) + '</label><strong id="' + attributes.pf_field_id + '_' + attributes.pf_field_type.split("_")[1] + '_required">*</strong>'; field += '<input disabled id="' + attributes.pf_field_id + '_' + attributes.pf_field_type.split("_")[1] + '" name="' + attributes.pf_title + '" class="" required="" value="" placeholder="Please enter a ' + attributes.pf_field_type.split("_")[1] + '" type="' + attributes.pf_field_type.split("_")[1] + '">'; field += '</div>'; return field; break}}
function edit_field_detail($datafield, $values){var $html; if ($values){$html = '<ul class="pfdrop_field_list" style="display: inline-table;padding:0px"><div class="pferror col-xs-12"></div>'; $html += '<input type="hidden" class="fpfullwidth" name="pftype" id="pftype" value="' + $datafield + '"><input type="hidden" class="fpfullwidth" name="pffieldid" id="pffieldid" value="' + $values.pf_field_id + '"><li class="col-xs-12"><label>Title:</label><input readonly type="text"  class="fpfullwidth" value="' + $values.pf_title + '" name="pftitle" id="pftitle" placeholder="Please enter the field title"></li>'; if ($datafield != 'pf_h1_field' && $datafield != 'pf_h2_field' && $datafield != 'pf_h3_field' && $datafield != 'pf_h4_field' && $datafield != 'pf_h5_field' && $datafield != 'pf_h6_field' && $datafield != 'pf_p_field' && $datafield != 'pf_hr_field' && $datafield != 'pf_br_field' && $datafield != 'pf_html_field' && $datafield != 'pf_anchor_field'){if ($datafield != 'pf_button_field'){$html += '<li class="col-xs-12"><label>Label:</label><input type="text" value="' + $values.pf_label + '" class="fpfullwidth" name="pflabel" id="pflabel" data-fieldid="' + $values.pf_field_id + '_' + $datafield.split("_")[1] + '_label" placeholder="Please enter the field label"></li>'}
$html += '<li class="col-xs-12"><label>Default Value:</label><input value="' + $values.pf_dvalue + '" type="text" class="fpfullwidth" name="pfdvalue" data-fieldid="' + $values.pf_field_id + '_' + $datafield.split("_")[1] + '" id="pfdvalue" placeholder="Please enter the field default value"></li>'}
$html += '<li class="col-xs-12"><label>Classes:</label><input value="' + $values.pf_field_class + '" type="text" class="fpfullwidth" name="pffieldclass" id="pffieldclass" data-fieldid="' + $values.pf_field_id + '_' + $datafield.split("_")[1] + '" placeholder="Please enter the field classes"></li>'; if ($datafield == 'pf_text_field' || $datafield == 'pf_email_field' || $datafield == 'pf_number_field' || $datafield == 'pf_url_field' || $datafield == 'pf_password_field' || $datafield == 'pf_tel_field'){$html += '<li class="col-xs-12"><label>Placeholder:</label><input type="text" value="' + $values.pf_placeholder + '" data-fieldid="' + $values.pf_field_id + '_' + $datafield.split("_")[1] + '" class="fpfullwidth" name="pfplaceholder" id="pfplaceholder" placeholder="Please enter the field placeholder"></li>'}
if ($datafield == 'pf_number_field'){$html += '<li class="col-xs-12"><label>Minimum Length:</label><input type="number" class="fpfullwidth" value="' + $values.pf_min + '" name="pfmin" data-fieldid="' + $values.pf_field_id + '_' + $datafield.split("_")[1] + '" id="pfmin" placeholder="Please enter the field Min Length"></li>'; $html += '<li class="col-xs-12"><label>Maximum Length:</label><input type="number" class="fpfullwidth" value="' + $values.pf_max + '" name="pfmax" data-fieldid="' + $values.pf_field_id + '_' + $datafield.split("_")[1] + '" id="pfmax" placeholder="Please enter the field Max Length"></li>'}
if ($datafield == 'pf_textarea_field'){$html += '<li class="col-xs-12"><label>Placeholder:</label><input value="' + $values.pf_placeholder + '" type="text" class="fpfullwidth" name="pfplaceholder" data-fieldid="' + $values.pf_field_id + '_' + $datafield.split("_")[1] + '" id="pfplaceholder" placeholder="Please enter the field placeholder"></li>'; $html += '<li class="col-xs-12"><label>Height:</label><input value="' + $values.pf_theight + '" type="text" class="fpfullwidth" name="pftheight" id="pftheight" data-fieldid="' + $values.pf_field_id + '_' + $datafield.split("_")[1] + '" placeholder="Please enter the textarea height"></li>'}
if ($datafield == 'pf_select_field'){$html += '<li class="col-xs-12"><label>Options :</label><textarea col="10" rows="6" class="fpfullwidth" data-fieldid="' + $values.pf_field_id + '_options" name="pfoptions" id="pfoptions" placeholder="Please enter the field options (comma seprated)">' + $values.pf_options + '</textarea></li>'; $html += '<span>Add an option on comma seprated.</span>'}
if ($datafield == 'pf_radio_field' || $datafield == 'pf_checkbox_field'){$html += '<li class="col-xs-12"><label>Options :</label><textarea col="10" rows="6" class="fpfullwidth" data-fieldid="' + $values.pf_field_id + '" name="pfoptions" id="pfoptions" placeholder="Please enter the field options (comma seprated)">' + $values.pf_options + '</textarea></li>'; $html += '<span>Add an option comma seprated.</span>'}
if ($datafield == 'pf_date_field' || $datafield == 'pf_time_field'){}
if ($datafield == 'pf_h1_field' || $datafield == 'pf_h2_field' || $datafield == 'pf_h3_field' || $datafield == 'pf_h4_field' || $datafield == 'pf_h5_field' || $datafield == 'pf_h6_field' || $datafield == 'pf_p_field' || $datafield == 'pf_html_field'){$html += '<li class="col-xs-12"><label>Text:</label><textarea col="10" rows="6" class="fpfullwidth" name="pffieldtext" id="pffieldtext" data-fieldid="' + $values.pf_field_id + '_' + $datafield.split("_")[1] + '" placeholder="Please enter the field text">' + $values.pf_filed_text + '</textarea></li>'}
if ($datafield != 'pf_h1_field' && $datafield != 'pf_h2_field' && $datafield != 'pf_h3_field' && $datafield != 'pf_h4_field' && $datafield != 'pf_h5_field' && $datafield != 'pf_h6_field' && $datafield != 'pf_p_field' && $datafield != 'pf_hr_field' && $datafield != 'pf_br_field' && $datafield != 'pf_html_field'){if ($values.pf_required == 'yes'){var $checkeds = 'checked'}
$html += '<li class="col-xs-12"><input data-fieldid="' + $values.pf_field_id + '_' + $datafield.split("_")[1] + '_label" data-fieldre="' + $values.pf_field_id + '_' + $datafield.split("_")[1] + '_required" type="checkbox" ' + $checkeds + ' class="fpfullwidth" name="pfrequired" value="no" id="pfrequired"><label>Required?</label></li>'}
$html += '</ul>'}
return $html}
function uniqid(){var retId = Math.floor(Math.random() * 0x75bcd15); return retId}
function ucfirst(string)
{return string.charAt(0).toUpperCase() + string.slice(1)}
function htmlspecialchars(text){return text.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;")}
function touchHandler(event){var touch = event.changedTouches[0]; var simulatedEvent = document.createEvent("MouseEvent"); simulatedEvent.initMouseEvent({touchstart:"mousedown", touchmove:"mousemove", touchend:"mouseup"}[event.type], !0, !0, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, !1, !1, !1, !1, 0, null); touch.target.dispatchEvent(simulatedEvent)}
function init(){document.addEventListener("touchstart", touchHandler, !0); document.addEventListener("touchmove", touchHandler, !0); document.addEventListener("touchend", touchHandler, !0); document.addEventListener("touchcancel", touchHandler, !0)}
$(document).on('submit', '#power_form_global_form_submits', function (event) {

event.preventDefault();
        $('.loadersOut').show();
        var power_form_global_form_class = $('#power_form_global_form_class').val();
        var power_form_global_form_permission = $('#power_form_global_form_permission').val();
        var power_form_global_form_success_message = $('#power_form_global_form_success_message').val();
        var power_form_global_form_error_message = $('#power_form_global_form_error_message').val();
        var power_form_global_form_checkbox_text = $('#power_form_global_form_gdp_checkbox_text').val();
        var power_form_global_form_consent_text = $('#opt-form-gdpr-form-checkbox-text').val();
        $('.loadersOut').show();
        $.ajax({
        url: frontend_ajax_object.ajaxurl,
                type: 'POST',
                data: {
                action: "pf_save_global_settings",
                        formclass: power_form_global_form_class,
                        formpermission: power_form_global_form_permission,
                        formsuccess: power_form_global_form_success_message,
                        formerror: power_form_global_form_error_message,
                        formcheckbox: power_form_global_form_checkbox_text,
                        formconsent: power_form_global_form_consent_text
                },
                success: function (response) {
                $('.loadersOut').hide();
                        var res = JSON.parse(response);
                        if (res.status == true) {
                alertify.set({
                delay: 1000
                });
                        alertify.success(res.message);
                } else {
                alertify.set({
                delay: 1000
                });
                        alertify.error(res.message);
                }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                $('.loadersOut').hide();
                        var form_error = frontend_ajax_object.form_error;
                        alertify.set({
                        delay: 1000
                        });
                        alertify.error(form_error);
                }
        });
        });
        $(document).on('submit', '#power_form_smtp_gernel_settings', function (event) {

event.preventDefault();
        $('.loadersOut').show();
        var power_form_smtp_host = $('#power_form_smtp_host').val();
        var power_form_smtp_auth = $('#power_form_smtp_auth').val();
        var power_form_smtp_username = $('#power_form_smtp_username').val();
        var power_form_smtp_password = $('#power_form_smtp_password').val();
        var power_form_type_of_encryption = $('#power_form_type_of_encryption').val();
        var power_form_smtp_port = $('#power_form_smtp_port').val();
        var _wpnonce = $('#_wpnonce').val();
        var power_form_from_email = $('#power_form_from_email').val();
        var power_form_from_name = $('#power_form_from_name').val();
        if ($('#power_form_disable_ssl_verification:checked').length > 0) {
var power_form_disable_ssl_verification = 1;
        } else {
var power_form_disable_ssl_verification = 0;
        }
$('.loadersOut').show();
        $.ajax({
        url: frontend_ajax_object.ajaxurl,
                type: 'POST',
                data: {
                action: "pf_save_smtp_settings",
                        power_form_smtp_host: power_form_smtp_host,
                        power_form_smtp_auth: power_form_smtp_auth,
                        power_form_smtp_username: power_form_smtp_username,
                        power_form_smtp_password: power_form_smtp_password,
                        power_form_type_of_encryption: power_form_type_of_encryption,
                        power_form_smtp_port: power_form_smtp_port,
                        power_form_from_email: power_form_from_email,
                        power_form_from_name: power_form_from_name,
                        _wpnonce: _wpnonce,
                        power_form_disable_ssl_verification: power_form_disable_ssl_verification
                },
                success: function (response) {
                $('.loadersOut').hide();
                        var res = JSON.parse(response);
                        if (res.status == true) {
                alertify.set({
                delay: 1000
                });
                        alertify.success(res.message);
                } else {
                alertify.set({
                delay: 1000
                });
                        alertify.error(res.message);
                }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                $('.loadersOut').hide();
                        var form_error = frontend_ajax_object.form_error;
                        alertify.set({
                        delay: 1000
                        });
                        alertify.error(form_error);
                }
        });
        });
        $(document).on('submit', '#power_form_smtp_mailer_send_test_email', function (event) {

event.preventDefault();
        $('.loadersOut').show();
        var power_form_smtp_mailer_to_email = $('#power_form_smtp_mailer_to_email').val();
        var power_form_smtp_mailer_email_subject = $('#power_form_smtp_mailer_email_subject').val();
        var power_form_smtp_mailer_email_body = $('#power_form_smtp_mailer_email_body').val();
        $('.loadersOut').show();
        $.ajax({
        url: frontend_ajax_object.ajaxurl,
                type: 'POST',
                data: {
                action: "pf_send_smtp_test_email",
                        power_form_smtp_mailer_to_email: power_form_smtp_mailer_to_email,
                        power_form_smtp_mailer_email_subject: power_form_smtp_mailer_email_subject,
                        power_form_smtp_mailer_email_body: power_form_smtp_mailer_email_body,
                },
                success: function (response) {
                $('.loadersOut').hide();
                        var res = JSON.parse(response);
                        if (res.status == true) {
                alertify.set({
                delay: 1000
                });
                        alertify.success(res.message);
                } else {
                alertify.set({
                delay: 1000
                });
                        alertify.error(res.message);
                }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                $('.loadersOut').hide();
                        var form_error = frontend_ajax_object.form_error;
                        alertify.set({
                        delay: 1000
                        });
                        alertify.error(form_error);
                }
        });
        });
        $(document).on('submit', '#power_form_global_recaptcha_form', function (event) {

event.preventDefault();
        $('.loadersOut').show();
        var power_form_global_recaptcha_site_key = $('#power_form_global_recaptcha_site_key').val();
        var power_form_global_form_secret_key = $('#power_form_global_form_secret_key').val();
        $('.loadersOut').show();
        $.ajax({
        url: frontend_ajax_object.ajaxurl,
                type: 'POST',
                data: {
                action: "pf_save_global_recaptcha_form",
                        power_form_global_recaptcha_site_key: power_form_global_recaptcha_site_key,
                        power_form_global_form_secret_key: power_form_global_form_secret_key,
                },
                success: function (response) {
                $('.loadersOut').hide();
                        var res = JSON.parse(response);
                        if (res.status == true) {
                alertify.set({
                delay: 1000
                });
                        alertify.success(res.message);
                } else {
                alertify.set({
                delay: 1000
                });
                        alertify.error(res.message);
                }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                $('.loadersOut').hide();
                        var form_error = frontend_ajax_object.form_error;
                        alertify.set({
                        delay: 1000
                        });
                        alertify.error(form_error);
                }
        });
        });
        /*
         * Author PFB
         * Ajax request for displaying all form entries
         */
        $(document).on('click', '.submissions', function (event) {
event.preventDefault();
        var formid = $(this).attr('data-formid');
        $('.loadersOut').show();
        $('.modal').show();
        $.ajax({
        url: frontend_ajax_object.ajaxurl,
                type: 'POST',
                data: {
                action: "pf_get_downloads_form",
                        formid: formid,
                },
                success: function (response) {
                $('.loadersOut').hide();
                        console.log(response);
                        var res = JSON.parse(response);
                        $('.fields-heading').text('Export Form Entries');
                        $('.maincontent').html(res.form);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                $('.loadersOut').hide();
                        var form_error = frontend_ajax_object.form_error;
                        alertify.set({
                        delay: 1000
                        });
                        alertify.error(form_error);
                }
        });
});
        $(document).on('submit', '#pfb_export_form', function (event) {

event.preventDefault();
        var formdata = $(this).serializeArray();
        var formid = $('#export_formid').val();
        var fd = new FormData();
        $.each(formdata, function (key, input) {
        fd.append(input.name, input.value);
        });
        fd.append('action', 'pf_download_file');
        $('.loadersOut').show();
        $('.modal').show();
        $.ajax({
        url: frontend_ajax_object.ajaxurl,
                type: 'POST',
                contentType: !1,
                processData: !1,
                data: fd,
                success: function (response) {
                $('.loadersOut').hide();
                        var res = JSON.parse(response);
                        if (res.status == true) {
                alertify.set({
                delay: 1000
                });
                        alertify.success(res.msg);
                        window.open(res.filename, '_blank');
                } else {
                alertify.set({
                delay: 1000
                });
                        alertify.error(res.msg);
                }
                console.log(res.filename);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                $('.loadersOut').hide();
                        var form_error = frontend_ajax_object.form_error;
                        alertify.set({
                        delay: 1000
                        });
                        alertify.error(form_error);
                }
        });
});
        jQuery(document).ready(function () {
$(document).on('click', '.pfb_accordion-header', function (event) {
$(this).toggleClass("pfb_active").next().slideToggle();
});
});
        })(jQuery)